<Application x:Class="SQL_Statement_Generator_GUI_Application.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SQL_Statement_Generator_GUI_Application"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Style x:Key="defaultBtnStyle" TargetType="Button">
                <Setter Property="FontWeight" Value="SemiBold"/>

                <Setter Property="FontSize" Value="12"/>

                <Setter Property="Background" Value="#24202b"/>

                <Setter Property="Foreground" Value="LightGray"/>

                <Setter Property="BorderBrush" Value="#32538a"/>

                <Setter Property="BorderThickness" Value="4"/>

                <Setter Property="Padding" Value="6"/>

                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="14"/>
                    </Style>
                </Style.Resources>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#312b3b"/>
                    </Trigger>

                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#24202b"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="defaultWindowStyle" TargetType="Window">
                <Setter Property="Title" Value="SQL Statement Generator"/>

                <Setter Property="Height" Value="600"/>

                <Setter Property="Width" Value="1000"/>

                <Setter Property="Background" Value="#24202b"/>

                <Setter Property="Foreground" Value="LightGray"/>
            </Style>

            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>

            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>

            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>

            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>

            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>

            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>

            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

            <ControlTemplate x:Key="newDefaultBtnStyle" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>

                    <!--
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
                -->
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="defaultTextBoxStyle" TargetType="TextBox">
                <Setter Property="Height" Value="36"/>

                <Setter Property="Background" Value="#312b3b"/>

                <Setter Property="Foreground" Value="LightGray"/>

                <Setter Property="BorderBrush" Value="#32538a"/>

                <Setter Property="BorderThickness" Value="4"/>

                <Setter Property="Padding" Value="6"/>

                <Setter Property="VerticalAlignment" Value="Center"/>

                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="14"/>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="defaultCheckBoxStyle" TargetType="CheckBox">
                <Setter Property="Background" Value="#312b3b"/>

                <Setter Property="Foreground" Value="LightGray"/>

                <Setter Property="BorderBrush" Value="#32538a"/>

                <Setter Property="BorderThickness" Value="4"/>

                <Setter Property="Padding" Value="6"/>

                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="LightGray"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#312b3b"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="LightGray"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#312b3b"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="LightGray"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#312b3b"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="LightGray"/>
            <ControlTemplate x:Key="defaultCheckBoxTemplate" TargetType="{x:Type CheckBox}">
                <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid x:Name="markGrid">
                            <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                            <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                        </Grid>
                    </Border>
                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasContent" Value="true">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                        <Setter Property="Padding" Value="4,-1,0,0"/>
                    </Trigger>
                    
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
